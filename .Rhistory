packages <- c("dplyr", "ggplot2")
invisible(lapply(packages, library, character.only = TRUE))
starbucks_data <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2021/2021-12-21/starbucks.csv')
nrow(starbucks_data)
head(starbucks_data$product_name)
View(starbucks_data)
starbuchs_data |>
unique(product_name)
starbucks_data |>
unique(product_name) |>
nrow()
unique(starbucks_data$product_name) |>
nrow()
unique(starbucks_data$product_name)
?selectizeInput
??selectizeInput
library(shiny)
library(dplyr)
ui <- fluidPage(
fluidRow(
selectizeInput("select_cyl", "Cyl",
choices = c('All cylinders', sort(unique(mtcars$cyl))),
multiple = TRUE,
selected = 'All cylinders'
),
uiOutput("select_carb")
)
)
server <- function(input, output, session) {
# render the child dropdown menu
output$select_carb <- renderUI({
# check whether user wants to filter by cyl;
# if not, then filter by selection
if ("All cylinders" %in% input$select_cyl) {
dat <- mtcars
} else {
dat <- mtcars %>%
filter(cyl %in% input$select_cyl)
}
# get available carb values
carbs <- sort(unique(dat$carb))
# render selectizeInput
selectizeInput("select_carb", "Carb",
choices = c("All carburetors", carbs),
multiple = TRUE,
selected = "All carburetors")
})
}
shinyApp(ui, server)
library(shiny)
ui <- fluidPage(
selectInput("dataset", label = "Dataset", choices = ls("package:datasets")),
verbatimTextOutput("summary"),
tableOutput("table")
)
server <- function(input, output, session) {
}
shinyApp(ui, server)
library(shiny)
ui <- fluidPage(
selectInput("dataset", label = "Dataset", choices = ls("package:datasets")),
verbatimTextOutput("summary"),
tableOutput("table")
)
server <- function(input, output, session) {
}
shinyApp(ui, server)
library(shiny)
ui <- fluidPage(
selectInput("dataset", label = "Dataset", choices = ls("package:datasets")),
verbatimTextOutput("summary"),
tableOutput("table")
)
server <- function(input, output, session) {
output$summary <- renderPrint({
dataset <- get(input$dataset, "package:datasets")
summary(dataset)
})
output$table <- renderTable({
dataset <- get(input$dataset, "package:datasets")
dataset
})
}
shinyApp(ui, server)
??fluidRow
library(dplyr)
starbucks_data <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2021/2021-12-21/starbucks.csv')
drinks <- sort(unique(starbucks_data$product_name))
View(drinks)
drinks
drinks |> filter(str_detect("Apple Spice"))
drinks |> tibble |> filter(str_detect("Apple Spice"))
tibble(drinks) |> filter(str_detect("Apple Spice"))
tibble(drinks) |> filter(stringr::str_detect("Apple Spice"))
tibble(drinks)
colnames(drinks)
starbucks_data |> filter(stringr::str_detect(product_name, "Apple Spice"))
??case_when
?selectInput
starbucks <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2021/2021-12-21/starbucks.csv')
# Clean up data for my purposes
starbucks <- starbucks |>
mutate(category = case_when(str_detect("Chai | Tea | tea") ~ "Tea",
str_detect("Lemonade | Smoothie | Hot Chocolate | Fibre Powder | Refreshers | Apple Spice") ~ "Other",
TRUE ~ "Coffee"
)
)
library(stringr)
starbucks <- starbucks %>%
mutate(category = case_when(str_detect("Chai | Tea | tea") ~ "Tea",
str_detect("Lemonade | Smoothie | Hot Chocolate | Fibre Powder | Refreshers | Apple Spice") ~ "Other",
TRUE ~ "Coffee"
)
)
starbucks <- starbucks |>
mutate(category = case_when(str_detect(product_name,
"Chai | Tea | tea") ~ "Tea",
str_detect(product_name,
"Lemonade | Smoothie | Hot Chocolate | Fibre Powder | Refreshers | Apple Spice") ~ "Other",
TRUE ~ "Coffee"
)
)
View(starbucks)
?mutate
starbucks <- starbucks |>
mutate(category = case_when(str_detect(product_name,
"Chai | Tea | tea") ~ "Tea",
str_detect(product_name,
"Lemonade | Smoothie | Hot Chocolate | Fibre Powder | Refreshers | Apple Spice") ~ "Other",
TRUE ~ "Coffee"
),
.after = product_name
)
View(starbucks)
colnames(starbucks)
starbucks <- starbucks |>
mutate(category = case_when(str_detect(product_name,
"Chai | Tea | tea") ~ "Tea",
str_detect(product_name,
"Lemonade | Smoothie | Hot Chocolate | Fibre Powder | Refreshers | Apple Spice") ~ "Other",
TRUE ~ "Coffee"
),
.after = product_name
) |>
str_to_upper(size) |>
str_to_title(product_name)
starbucks <- starbucks |>
mutate(category = case_when(str_detect(product_name,
"Chai | Tea | tea") ~ "Tea",
str_detect(product_name,
"Lemonade | Smoothie | Hot Chocolate | Fibre Powder | Refreshers | Apple Spice") ~ "Other",
TRUE ~ "Coffee"
),
.after = product_name
) |>
str_to_upper(size)
starbucks <- starbucks %>%
mutate(category = case_when(str_detect(product_name,
"Chai | Tea | tea") ~ "Tea",
str_detect(product_name,
"Lemonade | Smoothie | Hot Chocolate | Fibre Powder | Refreshers | Apple Spice") ~ "Other",
TRUE ~ "Coffee"
),
.after = product_name
) %>%
str_to_upper(size) %>%
str_to_title(product_name)
raw_data <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2021/2021-12-21/starbucks.csv')
starbucks <- raw_data |>
mutate(category = case_when(str_detect(product_name,
"Chai | Tea | tea") ~ "Tea",
str_detect(product_name,
"Lemonade | Smoothie | Hot Chocolate | Fibre Powder | Refreshers | Apple Spice") ~ "Other",
TRUE ~ "Coffee"
),
.after = product_name
) |>
mutate(size = str_to_upper(size)) |>
mutate(product_name = str_to_title(product_name))
starbucks$product_name[497]
starbucks <- raw_data |>
mutate(category = case_when(str_detect(product_name,
"Chai|Tea|tea") ~ "Tea",
str_detect(product_name,
"Lemonade|Smoothie|Hot Chocolate|Fibre Powder|Refresher|Apple Spice") ~ "Other",
TRUE ~ "Coffee"
),
.after = product_name
) |>
mutate(product_name = str_to_title(product_name)) |>
mutate(size = str_to_title(size))
starbucks$product_name[1048]
starbucks <- raw_data |>
mutate(category = case_when(str_detect(product_name,
"Chai|Tea|tea") ~ "Tea",
str_detect(product_name,
"Lemonade|Smoothie|Hot Chocolate|Fibre Powder|Refresher|Apple Spice|Crème Frappuccino Blended") ~ "Other",
TRUE ~ "Coffee"
),
.after = product_name
) |>
mutate(product_name = str_to_title(product_name)) |>
mutate(size = str_to_title(size))
colnames(mtcars)
runApp()
# Load packages
packages <- c("shiny", "dplyr", "stringr", "magrittr")
invisible(lapply(packages, library, character.only = TRUE))
# Load data
raw_data <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2021/2021-12-21/starbucks.csv')
# Clean up data for my purposes
starbucks <- raw_data |>
mutate(category = case_when(str_detect(product_name,
"Chai|Tea|tea") ~ "Tea",
str_detect(product_name,
"Lemonade|Smoothie|Hot Chocolate|Fibre Powder|Refresher|Apple Spice|Crème Frappuccino Blended") ~ "Other",
TRUE ~ "Coffee"
),
.after = product_name
) |>
mutate(product_name = str_to_title(product_name)) |>
mutate(size = str_to_title(size))
library(shiny)
ui <- fluidPage(
selectInput(inputID = "select_cat",
label = "Select your beverage.",
choices = sort(unique(starbucks$product_name)),
selectize = TRUE
),
uiOutput("select_bev"), # name child
uiOutput("select_size") # name grandchild
)
runApp()
?uiOutput
runApp()
runApp()
runApp()
runApp()
runApp()
?get
runApp()
runApp()
